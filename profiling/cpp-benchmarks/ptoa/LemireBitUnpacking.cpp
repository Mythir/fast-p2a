
/**
 * bitpacking.cpp
 * Daniel Lemire, http://lemire.me/blog/
 *
 * Question: if you pack and unpack bits, is it much faster if you
 * pack into 8 or 16 bits than, say, 31 or 7 bits?
 *
 *
 * Hardware: 2011 macbook air with Intel Core i7
 * compiler GNU GCC 4.6.2 (code is optimized for GCC 4.6.2, please
 * don't use older compilers as there are pieces of code that
 * would need to be written more carefully for stupider compilers.)
 *
 * g++-4 -Ofast -o bitpacking bitpacking.cpp
 *
 * bits	packtime	unpacktime
 * 1	219			211
 * 2	215			216
 * 3	210			205
 * 4	198			194
 * 5	222			214
 * 6	229			218
 * 7	242			222
 * 8	167			202
 * 9	252			240
 * 10	243			225
 * 11	255			235
 * 12	246			231
 * 13	276			244
 * 14	279			245
 * 15	304			255
 * 16	183			223
 * 17	292			252
 * 18	297			256
 * 19	316			266
 * 20	300			256
 * 21	329			280
 * 22	321			274
 * 23	332			278
 * 24	299			257
 * 25	341			289
 * 26	340			298
 * 27	352			295
 * 28	336			284
 * 29	367			311
 * 30	357			299
 * 31	384			319
 * 32	256			261
 *
 */

 /*
  * As can be seen in the above comment block, this bit unpacking/packing code has been taken from an excellent blogpost by Daniel Lemire:
  * https://lemire.me/blog/2012/03/06/how-fast-is-bit-packing/
  *
  * All bit unpacking functions for bit widths larger than 32 were generated by myself based on the code from Lemire.
  */

#include <iostream>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/types.h>
#include <vector>
#include <cstdlib>
#include <stdio.h>
#include <string.h>

#include <LemireBitUnpacking.h>
#include <SWParquetReader.h>

using namespace std;


void __fastunpack1(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   & 1 ;
    out++;
    *out = ( (*in) >>  1  )   & 1 ;
    out++;
    *out = ( (*in) >>  2  )   & 1 ;
    out++;
    *out = ( (*in) >>  3  )   & 1 ;
    out++;
    *out = ( (*in) >>  4  )   & 1 ;
    out++;
    *out = ( (*in) >>  5  )   & 1 ;
    out++;
    *out = ( (*in) >>  6  )   & 1 ;
    out++;
    *out = ( (*in) >>  7  )   & 1 ;
    out++;
    *out = ( (*in) >>  8  )   & 1 ;
    out++;
    *out = ( (*in) >>  9  )   & 1 ;
    out++;
    *out = ( (*in) >>  10  )   & 1 ;
    out++;
    *out = ( (*in) >>  11  )   & 1 ;
    out++;
    *out = ( (*in) >>  12  )   & 1 ;
    out++;
    *out = ( (*in) >>  13  )   & 1 ;
    out++;
    *out = ( (*in) >>  14  )   & 1 ;
    out++;
    *out = ( (*in) >>  15  )   & 1 ;
    out++;
    *out = ( (*in) >>  16  )   & 1 ;
    out++;
    *out = ( (*in) >>  17  )   & 1 ;
    out++;
    *out = ( (*in) >>  18  )   & 1 ;
    out++;
    *out = ( (*in) >>  19  )   & 1 ;
    out++;
    *out = ( (*in) >>  20  )   & 1 ;
    out++;
    *out = ( (*in) >>  21  )   & 1 ;
    out++;
    *out = ( (*in) >>  22  )   & 1 ;
    out++;
    *out = ( (*in) >>  23  )   & 1 ;
    out++;
    *out = ( (*in) >>  24  )   & 1 ;
    out++;
    *out = ( (*in) >>  25  )   & 1 ;
    out++;
    *out = ( (*in) >>  26  )   & 1 ;
    out++;
    *out = ( (*in) >>  27  )   & 1 ;
    out++;
    *out = ( (*in) >>  28  )   & 1 ;
    out++;
    *out = ( (*in) >>  29  )   & 1 ;
    out++;
    *out = ( (*in) >>  30  )   & 1 ;
    out++;
    *out = ( (*in) >>  31  )   & 1 ;
}




void __fastunpack2(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  2  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  4  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 2 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  2  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  4  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 2 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 2 ) ;
}




void __fastunpack3(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  3  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  9  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 3 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 3 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  4  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  7  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 3 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 3 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  5  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  11  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 3 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 3 ) ;
}




void __fastunpack5(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  5  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 5 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 5 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 5 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 5 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  11  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 5 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 5 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  9  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 5 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 5 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  7  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 5 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 5 ) ;
}




void __fastunpack6(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 6 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 6 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 6 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 6 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 6 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  6  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 6 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 6 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 6 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 6 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 6 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 6 ) ;
}




void __fastunpack7(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  7  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 7 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 7 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 7 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  9  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 7 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 7 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  8  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 7 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 7 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  11  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 7 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 7 ) ;
}




void __fastunpack9(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  9  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 9 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 9 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 9 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 9 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 9 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  11  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 9 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 9 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 9 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 9 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 9 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 9 ) ;
}




void __fastunpack10(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 10 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 10 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 10 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 10 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 10 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  10  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 10 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 10 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 10 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 10 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 10 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 10 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 10 ) ;
}




void __fastunpack11(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  11  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 11 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 11 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 11 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 11 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 11 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 11 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 11 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 11 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 11 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 11 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 11 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 11 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 11 ) ;
}




void __fastunpack12(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 12 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 12 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 12 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 12 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 12 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 12 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 12 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 12 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 12 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  12  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 12 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 12 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 12 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 12 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 12 ) ;
}




void __fastunpack13(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  13  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 13 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 13 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 13 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 13 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 13 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 13 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 13 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 13 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 13 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 13 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 13 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 13 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 13 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 13 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 13 ) ;
}




void __fastunpack14(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 14 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 14 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 14 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 14 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 14 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 14 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 14 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  14  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 14 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 14 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 14 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 14 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 14 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 14 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 14 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 14 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 14 ) ;
}




void __fastunpack15(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  15  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 15 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 15 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 15 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 15 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 15 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 15 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 15 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  16  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 15 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 15 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 15 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 15 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 15 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 15 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 15 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 15 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 15 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 15 ) ;
}




void __fastunpack17(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  17  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 17 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 17 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 17 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 17 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 17 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 17 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 17 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 17 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 17 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 17 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 17 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 17 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 17 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 17 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 17 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 17 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 17 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 17 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 17 ) ;
}




void __fastunpack18(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 18 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 18 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 18 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 18 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 18 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 18 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 18 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 18 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 18 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  18  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 18 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 18 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 18 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 18 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 18 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 18 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 18 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 18 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 18 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 18 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 18 ) ;
}




void __fastunpack19(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  19  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 19 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 19 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 19 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 19 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 19 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 19 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 19 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 19 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 19 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 19 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 19 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 19 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 19 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 19 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 19 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 19 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 19 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 19 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 19 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 19 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 19 ) ;
}




void __fastunpack20(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 20 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 20 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 20 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 20 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 20 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 20 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 20 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 20 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 20 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 20 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 20 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 20 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 20 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 20 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 20 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  20  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 20 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 20 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 20 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 20 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 20 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 20 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 20 ) ;
}




void __fastunpack21(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  21  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 21 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 21 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 21 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 21 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 21 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 21 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 21 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 21 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 21 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 21 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 21 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 21 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 21 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 21 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 21 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 21 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 21 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 21 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 21 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 21 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 21 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 21 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 21 ) ;
}




void __fastunpack22(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 22 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 22 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 22 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 22 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 22 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 22 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 22 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 22 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 22 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 22 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 22 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  22  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 22 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 22 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 22 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 22 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 22 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 22 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 22 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 22 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 22 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 22 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 22 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 22 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 22 ) ;
}




void __fastunpack23(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  23  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 23 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 23 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 23 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 23 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 23 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 23 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 23 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 23 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 23 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 23 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 23 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 23 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 21 ))<<( 23 - 21 );
    out++;
    *out = ( (*in) >>  21  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 23 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 23 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 23 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 23 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 23 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 23 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 23 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 23 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 23 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 23 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 23 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 23 ) ;
}




void __fastunpack24(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 24 ) ;
    out++;
    *out = ( (*in) >>  24  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 24 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 24 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 24 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 24 ) ;
}




void __fastunpack25(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  25  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 25 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 25 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 25 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 25 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 25 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 25 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 25 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 25 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 25 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 25 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 23 ))<<( 25 - 23 );
    out++;
    *out = ( (*in) >>  23  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 25 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 25 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 25 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 25 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 25 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 25 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 25 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 25 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 25 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 25 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 25 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 21 ))<<( 25 - 21 );
    out++;
    *out = ( (*in) >>  21  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 25 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 25 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 25 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 25 ) ;
}




void __fastunpack26(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 26 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 26 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 26 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 26 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 26 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 26 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 26 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 26 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 26 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 26 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 26 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 26 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 26 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  26  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 26 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 26 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 26 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 26 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 26 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 26 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 26 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 26 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 26 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 26 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 26 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 26 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 26 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 26 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 26 ) ;
}




void __fastunpack27(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 27 ) ;
    out++;
    *out = ( (*in) >>  27  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 27 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 27 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 27 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 27 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 27 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 27 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 27 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 27 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 27 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 27 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 27 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 27 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 26 ))<<( 27 - 26 );
    out++;
    *out = ( (*in) >>  26  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 21 ))<<( 27 - 21 );
    out++;
    *out = ( (*in) >>  21  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 27 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 27 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 27 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 27 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 27 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 23 ))<<( 27 - 23 );
    out++;
    *out = ( (*in) >>  23  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 27 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 27 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 27 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 27 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 27 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 25 ))<<( 27 - 25 );
    out++;
    *out = ( (*in) >>  25  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 27 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 27 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 27 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 27 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 27 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 27 ) ;
}




void __fastunpack28(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 28 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 28 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 28 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 28 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 28 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 28 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 28 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 28 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 28 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 28 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 28 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 28 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 28 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 28 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 28 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 28 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 28 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 28 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 28 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 28 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 28 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 28 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 28 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 28 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 28 ) ;
    out++;
    *out = ( (*in) >>  28  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 28 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 28 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 28 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 28 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 28 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 28 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 28 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 28 ) ;
}




void __fastunpack29(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 29 ) ;
    out++;
    *out = ( (*in) >>  29  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 26 ))<<( 29 - 26 );
    out++;
    *out = ( (*in) >>  26  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 23 ))<<( 29 - 23 );
    out++;
    *out = ( (*in) >>  23  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 29 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 29 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 29 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 29 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 29 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 29 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 29 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 29 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 28 ))<<( 29 - 28 );
    out++;
    *out = ( (*in) >>  28  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 25 ))<<( 29 - 25 );
    out++;
    *out = ( (*in) >>  25  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 29 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 29 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 29 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 29 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 29 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 29 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 29 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 29 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 29 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 27 ))<<( 29 - 27 );
    out++;
    *out = ( (*in) >>  27  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 29 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 21 ))<<( 29 - 21 );
    out++;
    *out = ( (*in) >>  21  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 29 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 29 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 29 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 29 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 29 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 29 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 29 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 29 ) ;
}




void __fastunpack30(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 30 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 28 ))<<( 30 - 28 );
    out++;
    *out = ( (*in) >>  28  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 26 ))<<( 30 - 26 );
    out++;
    *out = ( (*in) >>  26  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 30 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 30 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 30 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 30 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 30 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 30 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 30 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 30 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 30 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 30 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 30 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 30 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 30 ) ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   % (1U << 30 ) ;
    out++;
    *out = ( (*in) >>  30  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 28 ))<<( 30 - 28 );
    out++;
    *out = ( (*in) >>  28  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 26 ))<<( 30 - 26 );
    out++;
    *out = ( (*in) >>  26  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 30 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 30 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 30 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 30 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 30 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 30 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 30 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 30 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 30 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 30 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 30 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 30 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 30 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 30 ) ;
}




void __fastunpack31(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   % (1U << 31 ) ;
    out++;
    *out = ( (*in) >>  31  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 30 ))<<( 31 - 30 );
    out++;
    *out = ( (*in) >>  30  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 29 ))<<( 31 - 29 );
    out++;
    *out = ( (*in) >>  29  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 28 ))<<( 31 - 28 );
    out++;
    *out = ( (*in) >>  28  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 27 ))<<( 31 - 27 );
    out++;
    *out = ( (*in) >>  27  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 26 ))<<( 31 - 26 );
    out++;
    *out = ( (*in) >>  26  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 25 ))<<( 31 - 25 );
    out++;
    *out = ( (*in) >>  25  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 24 ))<<( 31 - 24 );
    out++;
    *out = ( (*in) >>  24  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 23 ))<<( 31 - 23 );
    out++;
    *out = ( (*in) >>  23  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 22 ))<<( 31 - 22 );
    out++;
    *out = ( (*in) >>  22  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 21 ))<<( 31 - 21 );
    out++;
    *out = ( (*in) >>  21  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 20 ))<<( 31 - 20 );
    out++;
    *out = ( (*in) >>  20  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 19 ))<<( 31 - 19 );
    out++;
    *out = ( (*in) >>  19  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 18 ))<<( 31 - 18 );
    out++;
    *out = ( (*in) >>  18  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 17 ))<<( 31 - 17 );
    out++;
    *out = ( (*in) >>  17  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 16 ))<<( 31 - 16 );
    out++;
    *out = ( (*in) >>  16  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 15 ))<<( 31 - 15 );
    out++;
    *out = ( (*in) >>  15  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 14 ))<<( 31 - 14 );
    out++;
    *out = ( (*in) >>  14  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 13 ))<<( 31 - 13 );
    out++;
    *out = ( (*in) >>  13  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 12 ))<<( 31 - 12 );
    out++;
    *out = ( (*in) >>  12  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 11 ))<<( 31 - 11 );
    out++;
    *out = ( (*in) >>  11  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 10 ))<<( 31 - 10 );
    out++;
    *out = ( (*in) >>  10  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 9 ))<<( 31 - 9 );
    out++;
    *out = ( (*in) >>  9  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 8 ))<<( 31 - 8 );
    out++;
    *out = ( (*in) >>  8  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 7 ))<<( 31 - 7 );
    out++;
    *out = ( (*in) >>  7  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 6 ))<<( 31 - 6 );
    out++;
    *out = ( (*in) >>  6  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 5 ))<<( 31 - 5 );
    out++;
    *out = ( (*in) >>  5  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 4 ))<<( 31 - 4 );
    out++;
    *out = ( (*in) >>  4  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 3 ))<<( 31 - 3 );
    out++;
    *out = ( (*in) >>  3  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 2 ))<<( 31 - 2 );
    out++;
    *out = ( (*in) >>  2  )   % (1U << 31 ) ;
    ++in;
    *out |= ((*in) % (1U<< 1 ))<<( 31 - 1 );
    out++;
    *out = ( (*in) >>  1  )   % (1U << 31 ) ;
}




void __fastunpack32(const uint *  __restrict__ in, uint *  __restrict__  out) {
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
    ++in;
    out++;
    *out = ( (*in) >>  0  )   ;
}


void __fastunpack4(const uint *  __restrict__ in, uint *  __restrict__  out) {
  for(uint outer=0; outer< 4 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<32; inwordpointer +=  4 )
      *(out++) = ( (*in) >> inwordpointer )   % (1U << 4 ) ;
    ++in;
  }
}




void __fastunpack8(const uint *  __restrict__ in, uint *  __restrict__  out) {
  for(uint outer=0; outer< 8 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<32; inwordpointer +=  8 )
      *(out++) = ( (*in) >> inwordpointer )   % (1U << 8 ) ;
    ++in;
  }
}



void __fastunpack16(const uint *  __restrict__ in, uint *  __restrict__  out) {
  for(uint outer=0; outer< 16 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<32; inwordpointer +=  16 )
      *(out++) = ( (*in) >> inwordpointer )   % (1U << 16 ) ;
    ++in;
  }
}

void fastunpack(const uint *  __restrict__ in, uint *  __restrict__  out, const uint bit) {
	switch(bit) {
            case 0:
                // Case 0 added to deal with Parquet's zero width bit packing
                for(int i=0; i<(BLOCK_SIZE/MINIBLOCKS_IN_BLOCK); i++){
                    out[i]=0;
                }
                break;
			case 1:
				__fastunpack1(in,out);
				break;
			case 2:
				__fastunpack2(in,out);
				break;
			case 3:
				__fastunpack3(in,out);
				break;
			case 4:
				__fastunpack4(in,out);
				break;
			case 5:
				__fastunpack5(in,out);
				break;
			case 6:
				__fastunpack6(in,out);
				break;
			case 7:
				__fastunpack7(in,out);
				break;
			case 8:
				__fastunpack8(in,out);
				break;
			case 9:
				__fastunpack9(in,out);
				break;
			case 10:
				__fastunpack10(in,out);
				break;
			case 11:
				__fastunpack11(in,out);
				break;
			case 12:
				__fastunpack12(in,out);
				break;
			case 13:
				__fastunpack13(in,out);
				break;
			case 14:
				__fastunpack14(in,out);
				break;
			case 15:
				__fastunpack15(in,out);
				break;
			case 16:
				__fastunpack16(in,out);
				break;
			case 17:
				__fastunpack17(in,out);
				break;
			case 18:
				__fastunpack18(in,out);
				break;
			case 19:
				__fastunpack19(in,out);
				break;
			case 20:
				__fastunpack20(in,out);
				break;
			case 21:
				__fastunpack21(in,out);
				break;
			case 22:
				__fastunpack22(in,out);
				break;
			case 23:
				__fastunpack23(in,out);
				break;
			case 24:
				__fastunpack24(in,out);
				break;
			case 25:
				__fastunpack25(in,out);
				break;
			case 26:
				__fastunpack26(in,out);
				break;
			case 27:
				__fastunpack27(in,out);
				break;
			case 28:
				__fastunpack28(in,out);
				break;
			case 29:
				__fastunpack29(in,out);
				break;
			case 30:
				__fastunpack30(in,out);
				break;
			case 31:
				__fastunpack31(in,out);
				break;
			case 32:
				__fastunpack32(in,out);
				break;
			default:
				break;
	}
}

__attribute__ ((noinline))
void fastunpack(const vector<uint> & data, vector<uint> & out, const uint bit) {
		const uint N = out.size();
		for(uint k = 0; k<N/32;++k) {
				fastunpack(& data[0]+(32 * bit) * k / 32,&out[0]+32*k,bit);
		}
}

//Bit unpacking functions for int64

void __int64fastunpack4(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
  for(uint outer=0; outer< 2 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<64; inwordpointer +=  4 )
      *(out++) = ( (*in) >> inwordpointer )   % (1ULL << 4 ) ;
    ++in;
  }
}

void __int64fastunpack8(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
  for(uint outer=0; outer< 4 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<64; inwordpointer +=  8 )
      *(out++) = ( (*in) >> inwordpointer )   % (1ULL << 8 ) ;
    ++in;
  }
}

void __int64fastunpack16(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
  for(uint outer=0; outer< 8 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<64; inwordpointer +=  16 )
      *(out++) = ( (*in) >> inwordpointer )   % (1ULL << 16 ) ;
    ++in;
  }
}

void __int64fastunpack32(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
  for(uint outer=0; outer< 4 ;++outer) {
    for( uint inwordpointer =  0 ;inwordpointer<64; inwordpointer +=  32 )
      *(out++) = ( (*in) >> inwordpointer )   % (1ULL << 32 ) ;
    ++in;
  }
}

//Auto generated
void __int64fastunpack1(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 1 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 1 );
}

void __int64fastunpack2(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 2 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 2 );
    in++;
}

void __int64fastunpack3(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 3 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 1 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 3 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 3 );
}

void __int64fastunpack5(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 5 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 4 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 5 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 3 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 5 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 5 );
}

void __int64fastunpack6(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 6 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 4 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 6 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 2 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 6 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 6 );
    in++;
}

void __int64fastunpack7(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 7 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 1 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 7 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 2 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 7 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 3 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 7 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 7 );
}

void __int64fastunpack9(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 9 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 1 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 9 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 2 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 9 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 3 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 9 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 4 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 9 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 9 );
}

void __int64fastunpack10(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 10 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 4 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 10 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 8 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 10 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 2 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 10 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 6 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 10 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 10 );
    in++;
}

void __int64fastunpack11(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 11 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 9 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 11 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 7 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 11 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 5 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 11 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 3 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 11 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 1 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 11 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 11 );
}

void __int64fastunpack12(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 12 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 4 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 12 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 8 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 12 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 12 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 4 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 12 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 8 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 12 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 12 );
    in++;
}

void __int64fastunpack13(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 12 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 11 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 10 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 9 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 8 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 13 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 7 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 13 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 13 );
}

void __int64fastunpack14(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 8 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 2 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 10 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 4 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 12 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 14 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 6 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 14 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 14 );
    in++;
}

void __int64fastunpack15(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 4 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 8 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 12 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 1 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 5 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 9 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 15 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 13 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 15 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 15 );
}

void __int64fastunpack17(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 13 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 9 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 5 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 1 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 14 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 10 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 6 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 17 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 17 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 2 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 17 );
}

void __int64fastunpack18(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 10 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 2 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 12 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 4 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 14 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 6 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 16 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 18 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 8 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 18 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 18 );
    in++;
}

void __int64fastunpack19(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 7 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 14 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 2 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 9 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 16 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 4 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 11 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 18 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 19 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 19 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 6 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 19 );
}

void __int64fastunpack20(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 4 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 8 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 12 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 16 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 20 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 4 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 8 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 12 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 20 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 16 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 20 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 20 );
    in++;
}

void __int64fastunpack21(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 1 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 2 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 3 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 4 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 5 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 6 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 7 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 8 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 9 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 21 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 21 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 10 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 21 );
}

void __int64fastunpack22(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 20 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 18 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 16 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 14 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 12 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 10 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 8 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 6 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 4 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 22 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 2 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 22 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 22 );
    in++;
}

void __int64fastunpack23(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 18 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 13 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 8 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 3 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 21 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 16 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 11 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 6 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 1 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 19 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 23 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 23 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 14 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 23 );
}

void __int64fastunpack24(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 16 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 8 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 24 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 16 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 8 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 24 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 16 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 8 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 24 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 16 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 24 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 8 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 24 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 24 );
    in++;
}

void __int64fastunpack25(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 14 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 3 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 17 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 6 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 20 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 9 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 23 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 12 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 1 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 15 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 4 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 25 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 25 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 18 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 25 );
}

void __int64fastunpack26(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 12 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 24 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 10 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 22 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 8 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 20 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 6 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 18 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 4 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 16 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 2 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 26 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 14 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 26 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 26 );
    in++;
}

void __int64fastunpack27(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 10 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 20 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 3 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 13 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 23 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 6 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 16 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 26 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 9 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 19 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 2 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 12 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 27 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 27 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 22 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 27 );
}

void __int64fastunpack28(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 8 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 16 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 24 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 4 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 12 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 20 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 28 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 8 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 16 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 24 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 4 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 12 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 28 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 20 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 28 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 28 );
    in++;
}

void __int64fastunpack29(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 6 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 12 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 18 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 24 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 1 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 7 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 13 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 19 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 25 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 2 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 8 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 14 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 20 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 29 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 29 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 26 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 29 );
}

void __int64fastunpack30(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 4 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 8 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 12 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 16 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 20 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 24 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 28 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 2 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 6 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 10 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 14 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 18 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 22 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 30 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 26 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 30 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 30 );
    in++;
}

void __int64fastunpack31(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 2 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 4 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 6 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 8 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 10 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 12 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 14 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 16 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 18 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 20 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 22 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 24 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 26 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 28 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 31 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 31 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 30 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 31 );
}

void __int64fastunpack33(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 31 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 29 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 27 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 25 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 23 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 21 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 19 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 17 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 15 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 13 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 11 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 9 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 7 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 5 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 3 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 33 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 33 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 1 );
}

void __int64fastunpack34(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 30 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 26 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 22 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 18 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 14 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 10 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 6 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 2 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 32 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 28 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 24 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 20 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 16 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 12 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 8 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 34 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 34 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 4 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 34 );
    in++;
}

void __int64fastunpack35(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 29 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 23 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 17 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 11 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 5 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 34 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 28 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 22 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 16 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 10 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 4 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 33 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 27 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 21 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 15 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 9 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 35 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 35 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 3 );
}

void __int64fastunpack36(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 28 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 20 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 12 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 4 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 32 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 24 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 16 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 8 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 36 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 28 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 20 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 12 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 4 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 32 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 24 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 16 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 36 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 36 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 8 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 36 );
    in++;
}

void __int64fastunpack37(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 27 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 17 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 7 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 34 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 24 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 14 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 33 ))<<( 4 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 31 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 21 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 11 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 1 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 28 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 18 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 8 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 35 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 25 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 15 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 37 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 37 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 5 );
}

void __int64fastunpack38(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 26 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 14 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 2 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 28 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 16 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 4 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 30 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 18 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 6 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 32 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 20 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 8 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 34 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 22 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 10 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 36 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 24 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 38 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 38 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 12 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 38 );
    in++;
}

void __int64fastunpack39(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 25 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 11 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 36 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 22 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 8 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 33 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 19 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 5 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 30 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 16 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 2 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 27 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 13 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 38 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 24 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 10 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 35 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 21 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 39 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 39 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 7 );
}

void __int64fastunpack40(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 24 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 8 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 32 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 16 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 40 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 24 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 8 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 32 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 16 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 40 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 24 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 8 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 32 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 16 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 40 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 24 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 8 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 32 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 40 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 40 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 16 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 40 );
    in++;
}

void __int64fastunpack41(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 23 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 5 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 28 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 10 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 33 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 15 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 38 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 20 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 2 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 25 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 7 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 30 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 12 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 35 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 17 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 40 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 22 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 4 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 27 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 41 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 41 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 9 );
}

void __int64fastunpack42(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 22 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 2 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 24 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 4 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 26 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 6 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 28 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 8 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 30 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 10 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 32 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 12 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 34 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 14 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 36 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 16 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 38 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 18 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 40 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 42 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 42 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 20 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 42 );
    in++;
}

void __int64fastunpack43(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 21 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 42 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 20 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 41 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 19 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 40 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 18 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 39 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 17 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 38 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 16 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 37 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 15 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 36 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 14 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 35 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 13 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 34 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 12 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 33 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 43 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 43 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 11 );
}

void __int64fastunpack44(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 20 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 40 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 16 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 36 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 12 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 32 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 8 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 28 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 4 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 24 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 44 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 20 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 40 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 16 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 36 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 12 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 32 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 8 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 28 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 44 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 4 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 44 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 24 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 44 );
    in++;
}

void __int64fastunpack45(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 19 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 38 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 33 ))<<( 12 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 31 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 5 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 24 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 43 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 17 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 36 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 10 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 29 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 3 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 22 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 41 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 15 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 34 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 8 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 27 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 1 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 20 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 39 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 45 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 45 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 13 );
}

void __int64fastunpack46(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 18 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 36 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 8 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 26 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 44 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 16 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 34 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 6 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 24 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 42 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 14 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 32 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 4 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 22 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 40 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 12 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 30 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 2 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 20 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 38 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 46 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 10 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 46 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 28 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 46 );
    in++;
}

void __int64fastunpack47(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 17 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 34 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 4 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 21 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 38 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 8 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 25 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 42 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 12 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 29 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 46 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 16 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 33 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 3 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 20 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 37 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 7 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 24 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 41 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 11 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 28 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 45 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 47 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 47 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 15 );
}

void __int64fastunpack48(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 48 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 16 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 48 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 32 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 48 );
    in++;
}

void __int64fastunpack49(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 15 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 30 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 45 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 11 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 26 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 41 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 7 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 22 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 37 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 3 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 18 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 33 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 48 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 14 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 29 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 44 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 10 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 25 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 40 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 6 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 21 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 36 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 49 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 2 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 49 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 17 );
}

void __int64fastunpack50(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 14 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 28 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 42 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 6 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 20 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 34 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 48 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 12 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 26 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 40 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 4 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 18 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 32 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 46 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 10 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 24 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 38 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 2 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 16 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 30 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 44 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 50 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 8 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 22 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 50 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 36 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 50 );
    in++;
}

void __int64fastunpack51(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 13 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 26 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 39 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 1 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 14 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 27 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 40 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 2 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 15 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 28 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 41 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 3 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 16 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 29 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 42 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 4 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 17 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 30 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 43 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 5 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 33 ))<<( 18 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 31 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 44 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 51 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 45 ))<<( 6 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 51 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 19 );
}

void __int64fastunpack52(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 12 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 24 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 36 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 48 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 8 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 20 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 32 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 44 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 4 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 16 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 28 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 40 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 52 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 12 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 24 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 36 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 48 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 8 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 20 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 32 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 44 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 52 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 4 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 16 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 28 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 52 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 40 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 52 );
    in++;
}

void __int64fastunpack53(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 11 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 22 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 33 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 44 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 51 ))<<( 2 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 13 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 24 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 35 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 46 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 4 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 15 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 27 ))<<( 26 );
    out++;
    *out = ( (*in) >>  27 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 37 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 5 ))<<( 48 );
    out++;
    *out = ( (*in) >>  5 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 6 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 17 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 28 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 39 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 50 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 45 ))<<( 8 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 19 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 30 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 41 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 52 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 53 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 10 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 53 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 21 );
}

void __int64fastunpack54(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 54 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 10 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 20 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 30 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 40 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 50 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 54 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 6 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 16 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 26 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 36 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 46 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 54 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 2 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 12 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 22 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 32 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 42 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 52 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 54 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 8 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 18 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 28 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 38 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 48 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 54 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 4 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 14 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 24 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 34 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 54 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 44 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 54 );
    in++;
}

void __int64fastunpack55(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 55 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 9 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 18 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 27 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 36 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 45 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 54 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 55 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 8 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 17 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 26 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 35 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 11 ))<<( 44 );
    out++;
    *out = ( (*in) >>  11 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 53 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 55 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 7 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 16 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 25 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 21 ))<<( 34 );
    out++;
    *out = ( (*in) >>  21 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 43 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 52 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 55 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 6 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 15 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 24 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 33 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 42 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 51 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 55 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 5 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 41 ))<<( 14 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 55 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 23 );
}

void __int64fastunpack56(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 56 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 8 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 16 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 32 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 40 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 48 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 56 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 56 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 8 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 16 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 32 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 40 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 48 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 56 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 56 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 8 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 16 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 32 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 40 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 48 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 56 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 56 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 8 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 16 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 24 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 32 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 40 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 56 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 48 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 56 );
    in++;
}

void __int64fastunpack57(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 57 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 7 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 14 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 21 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 28 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 35 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 15 ))<<( 42 );
    out++;
    *out = ( (*in) >>  15 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 49 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 56 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 57 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 51 ))<<( 6 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 13 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 20 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 27 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 34 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 41 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 48 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 55 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 57 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 5 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 45 ))<<( 12 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 19 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 26 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 33 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 17 ))<<( 40 );
    out++;
    *out = ( (*in) >>  17 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 47 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 54 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 57 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 53 ))<<( 4 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 11 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 18 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 57 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 25 );
}

void __int64fastunpack58(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 58 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 6 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 12 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 18 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 24 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 30 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 36 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 42 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 48 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 54 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 58 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 2 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 8 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 14 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 20 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 26 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 32 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 38 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 44 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 50 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 56 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 58 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 54 ))<<( 4 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 10 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 16 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 22 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 28 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 34 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 40 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 46 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 58 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 52 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 58 );
    in++;
}

void __int64fastunpack59(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 59 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 54 ))<<( 5 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 10 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 15 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 20 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 25 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 29 ))<<( 30 );
    out++;
    *out = ( (*in) >>  29 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 35 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 40 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 45 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 9 ))<<( 50 );
    out++;
    *out = ( (*in) >>  9 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 55 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 59 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 58 ))<<( 1 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 53 ))<<( 6 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 11 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 16 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 21 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 33 ))<<( 26 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 31 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 23 ))<<( 36 );
    out++;
    *out = ( (*in) >>  23 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 41 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 46 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 51 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 3 ))<<( 56 );
    out++;
    *out = ( (*in) >>  3 ) % (1ULL << 59 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 57 ))<<( 2 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 7 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 12 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 17 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 22 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 59 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 27 );
}

void __int64fastunpack60(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 60 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 4 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 8 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 12 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 16 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 20 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 24 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 28 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 32 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 36 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 40 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 44 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 48 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 52 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 56 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 60 );
    in++;
    out++;
    *out = ( (*in) >>  0 ) % (1ULL << 60 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 4 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 8 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 12 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 16 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 20 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 24 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 28 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 32 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 36 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 40 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 44 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 48 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 52 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 60 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 56 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 60 );
    in++;
}

void __int64fastunpack61(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 61 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 58 ))<<( 3 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 55 ))<<( 6 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 9 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 12 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 15 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 18 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 21 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 24 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 27 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 31 ))<<( 30 );
    out++;
    *out = ( (*in) >>  31 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 33 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 25 ))<<( 36 );
    out++;
    *out = ( (*in) >>  25 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 39 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 19 ))<<( 42 );
    out++;
    *out = ( (*in) >>  19 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 45 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 13 ))<<( 48 );
    out++;
    *out = ( (*in) >>  13 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 51 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 7 ))<<( 54 );
    out++;
    *out = ( (*in) >>  7 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 57 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 1 ))<<( 60 );
    out++;
    *out = ( (*in) >>  1 ) % (1ULL << 61 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 59 ))<<( 2 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 5 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 53 ))<<( 8 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 11 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 14 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 17 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 41 ))<<( 20 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 23 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 26 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 61 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 29 );
}

void __int64fastunpack62(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 62 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 60 ))<<( 2 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 58 ))<<( 4 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 6 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 54 ))<<( 8 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 10 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 12 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 14 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 16 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 18 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 20 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 22 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 24 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 26 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 28 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 30 );
    out++;
    *out = ( (*in) >>  32 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 30 ))<<( 32 );
    out++;
    *out = ( (*in) >>  30 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 28 ))<<( 34 );
    out++;
    *out = ( (*in) >>  28 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 26 ))<<( 36 );
    out++;
    *out = ( (*in) >>  26 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 24 ))<<( 38 );
    out++;
    *out = ( (*in) >>  24 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 22 ))<<( 40 );
    out++;
    *out = ( (*in) >>  22 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 20 ))<<( 42 );
    out++;
    *out = ( (*in) >>  20 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 18 ))<<( 44 );
    out++;
    *out = ( (*in) >>  18 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 16 ))<<( 46 );
    out++;
    *out = ( (*in) >>  16 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 14 ))<<( 48 );
    out++;
    *out = ( (*in) >>  14 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 12 ))<<( 50 );
    out++;
    *out = ( (*in) >>  12 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 10 ))<<( 52 );
    out++;
    *out = ( (*in) >>  10 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 8 ))<<( 54 );
    out++;
    *out = ( (*in) >>  8 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 6 ))<<( 56 );
    out++;
    *out = ( (*in) >>  6 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 4 ))<<( 58 );
    out++;
    *out = ( (*in) >>  4 ) % (1ULL << 62 );
    in++;
    *out |= ((*in) % (1ULL<< 2 ))<<( 60 );
    out++;
    *out = ( (*in) >>  2 ) % (1ULL << 62 );
    in++;
}

void __int64fastunpack63(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = ( (*in) >>  0 ) % (1ULL << 63 );
    out++;
    *out = ( (*in) >>  63 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 62 ))<<( 1 );
    out++;
    *out = ( (*in) >>  62 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 61 ))<<( 2 );
    out++;
    *out = ( (*in) >>  61 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 60 ))<<( 3 );
    out++;
    *out = ( (*in) >>  60 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 59 ))<<( 4 );
    out++;
    *out = ( (*in) >>  59 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 58 ))<<( 5 );
    out++;
    *out = ( (*in) >>  58 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 57 ))<<( 6 );
    out++;
    *out = ( (*in) >>  57 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 56 ))<<( 7 );
    out++;
    *out = ( (*in) >>  56 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 55 ))<<( 8 );
    out++;
    *out = ( (*in) >>  55 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 54 ))<<( 9 );
    out++;
    *out = ( (*in) >>  54 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 53 ))<<( 10 );
    out++;
    *out = ( (*in) >>  53 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 52 ))<<( 11 );
    out++;
    *out = ( (*in) >>  52 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 51 ))<<( 12 );
    out++;
    *out = ( (*in) >>  51 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 50 ))<<( 13 );
    out++;
    *out = ( (*in) >>  50 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 49 ))<<( 14 );
    out++;
    *out = ( (*in) >>  49 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 48 ))<<( 15 );
    out++;
    *out = ( (*in) >>  48 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 47 ))<<( 16 );
    out++;
    *out = ( (*in) >>  47 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 46 ))<<( 17 );
    out++;
    *out = ( (*in) >>  46 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 45 ))<<( 18 );
    out++;
    *out = ( (*in) >>  45 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 44 ))<<( 19 );
    out++;
    *out = ( (*in) >>  44 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 43 ))<<( 20 );
    out++;
    *out = ( (*in) >>  43 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 42 ))<<( 21 );
    out++;
    *out = ( (*in) >>  42 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 41 ))<<( 22 );
    out++;
    *out = ( (*in) >>  41 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 40 ))<<( 23 );
    out++;
    *out = ( (*in) >>  40 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 39 ))<<( 24 );
    out++;
    *out = ( (*in) >>  39 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 38 ))<<( 25 );
    out++;
    *out = ( (*in) >>  38 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 37 ))<<( 26 );
    out++;
    *out = ( (*in) >>  37 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 36 ))<<( 27 );
    out++;
    *out = ( (*in) >>  36 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 35 ))<<( 28 );
    out++;
    *out = ( (*in) >>  35 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 34 ))<<( 29 );
    out++;
    *out = ( (*in) >>  34 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 33 ))<<( 30 );
    out++;
    *out = ( (*in) >>  33 ) % (1ULL << 63 );
    in++;
    *out |= ((*in) % (1ULL<< 32 ))<<( 31 );
}

void __int64fastunpack64(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out) {
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
    out++;
    in++;
    *out = *in;
}

void int64fastunpack(const uint64_t *  __restrict__ in, uint64_t *  __restrict__  out, const uint bit) {
    switch(bit) {
            case 0:
                // Case 0 added to deal with Parquet's zero width bit packing
                for(int i=0; i<(BLOCK_SIZE/MINIBLOCKS_IN_BLOCK); i++){
                    out[i]=0;
                }
                break;
        case 1:
            __int64fastunpack1(in, out);
            break;
        case 2:
            __int64fastunpack2(in, out);
            break;
        case 3:
            __int64fastunpack3(in, out);
            break;
        case 4:
            __int64fastunpack4(in, out);
            break;
        case 5:
            __int64fastunpack5(in, out);
            break;
        case 6:
            __int64fastunpack6(in, out);
            break;
        case 7:
            __int64fastunpack7(in, out);
            break;
        case 8:
            __int64fastunpack8(in, out);
            break;
        case 9:
            __int64fastunpack9(in, out);
            break;
        case 10:
            __int64fastunpack10(in, out);
            break;
        case 11:
            __int64fastunpack11(in, out);
            break;
        case 12:
            __int64fastunpack12(in, out);
            break;
        case 13:
            __int64fastunpack13(in, out);
            break;
        case 14:
            __int64fastunpack14(in, out);
            break;
        case 15:
            __int64fastunpack15(in, out);
            break;
        case 16:
            __int64fastunpack16(in, out);
            break;
        case 17:
            __int64fastunpack17(in, out);
            break;
        case 18:
            __int64fastunpack18(in, out);
            break;
        case 19:
            __int64fastunpack19(in, out);
            break;
        case 20:
            __int64fastunpack20(in, out);
            break;
        case 21:
            __int64fastunpack21(in, out);
            break;
        case 22:
            __int64fastunpack22(in, out);
            break;
        case 23:
            __int64fastunpack23(in, out);
            break;
        case 24:
            __int64fastunpack24(in, out);
            break;
        case 25:
            __int64fastunpack25(in, out);
            break;
        case 26:
            __int64fastunpack26(in, out);
            break;
        case 27:
            __int64fastunpack27(in, out);
            break;
        case 28:
            __int64fastunpack28(in, out);
            break;
        case 29:
            __int64fastunpack29(in, out);
            break;
        case 30:
            __int64fastunpack30(in, out);
            break;
        case 31:
            __int64fastunpack31(in, out);
            break;
        case 32:
            __int64fastunpack32(in, out);
            break;
        case 33:
            __int64fastunpack33(in, out);
            break;
        case 34:
            __int64fastunpack34(in, out);
            break;
        case 35:
            __int64fastunpack35(in, out);
            break;
        case 36:
            __int64fastunpack36(in, out);
            break;
        case 37:
            __int64fastunpack37(in, out);
            break;
        case 38:
            __int64fastunpack38(in, out);
            break;
        case 39:
            __int64fastunpack39(in, out);
            break;
        case 40:
            __int64fastunpack40(in, out);
            break;
        case 41:
            __int64fastunpack41(in, out);
            break;
        case 42:
            __int64fastunpack42(in, out);
            break;
        case 43:
            __int64fastunpack43(in, out);
            break;
        case 44:
            __int64fastunpack44(in, out);
            break;
        case 45:
            __int64fastunpack45(in, out);
            break;
        case 46:
            __int64fastunpack46(in, out);
            break;
        case 47:
            __int64fastunpack47(in, out);
            break;
        case 48:
            __int64fastunpack48(in, out);
            break;
        case 49:
            __int64fastunpack49(in, out);
            break;
        case 50:
            __int64fastunpack50(in, out);
            break;
        case 51:
            __int64fastunpack51(in, out);
            break;
        case 52:
            __int64fastunpack52(in, out);
            break;
        case 53:
            __int64fastunpack53(in, out);
            break;
        case 54:
            __int64fastunpack54(in, out);
            break;
        case 55:
            __int64fastunpack55(in, out);
            break;
        case 56:
            __int64fastunpack56(in, out);
            break;
        case 57:
            __int64fastunpack57(in, out);
            break;
        case 58:
            __int64fastunpack58(in, out);
            break;
        case 59:
            __int64fastunpack59(in, out);
            break;
        case 60:
            __int64fastunpack60(in, out);
            break;
        case 61:
            __int64fastunpack61(in, out);
            break;
        case 62:
            __int64fastunpack62(in, out);
            break;
        case 63:
            __int64fastunpack63(in, out);
            break;
        case 64:
            __int64fastunpack64(in, out);
            break;
        default:
            break;
    }
}

